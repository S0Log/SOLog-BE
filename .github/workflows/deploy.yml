name: Build, Push, and Deploy to EC2

on:
  push:
    branches:
      - deploy

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the code
        uses: actions/checkout@v2

      - name: Ensure gradlew is executable
        run: chmod +x gradlew

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      # Docker 이미지 빌드
      - name: Build Docker image for backend
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/solog_be:latest .

      # Docker Hub에 푸시
      - name: Push Docker image to Docker Hub
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker push ${{ secrets.DOCKER_USERNAME }}/solog_be:latest
  

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy Spring Boot app to EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # 최신 Spring Boot Docker 이미지 Pull
            echo "Pulling latest Spring Boot app image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/solog_be:latest

            # 기존 Spring Boot 컨테이너 중지 및 제거
            echo "Stopping old Spring Boot container..."
            docker stop solog_be || true
            docker rm solog_be || true

            # 새로운 Spring Boot 컨테이너 실행
            echo "Starting new Spring Boot container..."
            docker run -d \
              --name solog_be \
              --network backend_network \
              --network host solog_be \
              -e SPRING_DATASOURCE_URL=${{ secrets.SPRING_DATASOURCE_URL }} \
              -e SPRING_DATASOURCE_USERNAME=${{ secrets.SPRING_DATASOURCE_USERNAME }} \
              -e SPRING_DATASOURCE_PASSWORD=${{ secrets.SPRING_DATASOURCE_PASSWORD }} \
              -p 8080:8080 \
              ${{ secrets.DOCKER_USERNAME }}/solog_be:latest
